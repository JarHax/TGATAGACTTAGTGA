/*
 * This file is generated by jOOQ.
*/
package com.jarhax.tcgatagacttagtga.db.tables.records;


import com.jarhax.tcgatagacttagtga.db.tables.UsersFldc;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersFldcRecord extends UpdatableRecordImpl<UsersFldcRecord> implements Record4<Integer, String, Double, String> {

    private static final long serialVersionUID = 621367122;

    /**
     * Setter for <code>folding.users_fldc.USER_ID</code>.
     */
    public void setUserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>folding.users_fldc.USER_ID</code>.
     */
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>folding.users_fldc.ADDRESS</code>.
     */
    public void setAddress(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>folding.users_fldc.ADDRESS</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>folding.users_fldc.CREDIT_NEW</code>.
     */
    public void setCreditNew(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>folding.users_fldc.CREDIT_NEW</code>.
     */
    public Double getCreditNew() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>folding.users_fldc.TOKEN</code>.
     */
    public void setToken(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>folding.users_fldc.TOKEN</code>.
     */
    public String getToken() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Double, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Double, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return UsersFldc.USERS_FLDC.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UsersFldc.USERS_FLDC.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return UsersFldc.USERS_FLDC.CREDIT_NEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return UsersFldc.USERS_FLDC.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getCreditNew();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getCreditNew();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersFldcRecord value1(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersFldcRecord value2(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersFldcRecord value3(Double value) {
        setCreditNew(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersFldcRecord value4(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersFldcRecord values(Integer value1, String value2, Double value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersFldcRecord
     */
    public UsersFldcRecord() {
        super(UsersFldc.USERS_FLDC);
    }

    /**
     * Create a detached, initialised UsersFldcRecord
     */
    public UsersFldcRecord(Integer userId, String address, Double creditNew, String token) {
        super(UsersFldc.USERS_FLDC);

        set(0, userId);
        set(1, address);
        set(2, creditNew);
        set(3, token);
    }
}

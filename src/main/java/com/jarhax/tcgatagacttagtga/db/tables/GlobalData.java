/*
 * This file is generated by jOOQ.
*/
package com.jarhax.tcgatagacttagtga.db.tables;


import com.jarhax.tcgatagacttagtga.db.Folding;
import com.jarhax.tcgatagacttagtga.db.Indexes;
import com.jarhax.tcgatagacttagtga.db.Keys;
import com.jarhax.tcgatagacttagtga.db.tables.records.GlobalDataRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GlobalData extends TableImpl<GlobalDataRecord> {

    private static final long serialVersionUID = -1606214669;

    /**
     * The reference instance of <code>folding.global_data</code>
     */
    public static final GlobalData GLOBAL_DATA = new GlobalData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GlobalDataRecord> getRecordType() {
        return GlobalDataRecord.class;
    }

    /**
     * The column <code>folding.global_data.DATE</code>.
     */
    public final TableField<GlobalDataRecord, Date> DATE = createField("DATE", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>folding.global_data.FOLDERS_TOTAL</code>.
     */
    public final TableField<GlobalDataRecord, Integer> FOLDERS_TOTAL = createField("FOLDERS_TOTAL", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>folding.global_data.POINTS_TOTAL</code>.
     */
    public final TableField<GlobalDataRecord, Long> POINTS_TOTAL = createField("POINTS_TOTAL", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>folding.global_data.WORK_UNITS_TOTAL</code>.
     */
    public final TableField<GlobalDataRecord, Long> WORK_UNITS_TOTAL = createField("WORK_UNITS_TOTAL", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>folding.global_data.FLDC_FOLDERS_TOTAL</code>.
     */
    public final TableField<GlobalDataRecord, Integer> FLDC_FOLDERS_TOTAL = createField("FLDC_FOLDERS_TOTAL", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>folding.global_data</code> table reference
     */
    public GlobalData() {
        this(DSL.name("global_data"), null);
    }

    /**
     * Create an aliased <code>folding.global_data</code> table reference
     */
    public GlobalData(String alias) {
        this(DSL.name(alias), GLOBAL_DATA);
    }

    /**
     * Create an aliased <code>folding.global_data</code> table reference
     */
    public GlobalData(Name alias) {
        this(alias, GLOBAL_DATA);
    }

    private GlobalData(Name alias, Table<GlobalDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private GlobalData(Name alias, Table<GlobalDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Folding.FOLDING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GLOBAL_DATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GlobalDataRecord> getPrimaryKey() {
        return Keys.KEY_GLOBAL_DATA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GlobalDataRecord>> getKeys() {
        return Arrays.<UniqueKey<GlobalDataRecord>>asList(Keys.KEY_GLOBAL_DATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GlobalData as(String alias) {
        return new GlobalData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GlobalData as(Name alias) {
        return new GlobalData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GlobalData rename(String name) {
        return new GlobalData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GlobalData rename(Name name) {
        return new GlobalData(name, null);
    }
}

/*
 * This file is generated by jOOQ.
*/
package com.jarhax.tcgatagacttagtga.db.tables.records;


import com.jarhax.tcgatagacttagtga.db.tables.TeamMembers;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamMembersRecord extends UpdatableRecordImpl<TeamMembersRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1458220473;

    /**
     * Setter for <code>folding.team_members.TEAM_ID</code>.
     */
    public void setTeamId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>folding.team_members.TEAM_ID</code>.
     */
    public Integer getTeamId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>folding.team_members.USER_ID</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>folding.team_members.USER_ID</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TeamMembers.TEAM_MEMBERS.TEAM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return TeamMembers.TEAM_MEMBERS.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getTeamId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getTeamId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeamMembersRecord value1(Integer value) {
        setTeamId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeamMembersRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeamMembersRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeamMembersRecord
     */
    public TeamMembersRecord() {
        super(TeamMembers.TEAM_MEMBERS);
    }

    /**
     * Create a detached, initialised TeamMembersRecord
     */
    public TeamMembersRecord(Integer teamId, Integer userId) {
        super(TeamMembers.TEAM_MEMBERS);

        set(0, teamId);
        set(1, userId);
    }
}

/*
 * This file is generated by jOOQ.
*/
package com.jarhax.tcgatagacttagtga.db.tables.records;


import com.jarhax.tcgatagacttagtga.db.tables.UserData;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDataRecord extends UpdatableRecordImpl<UserDataRecord> implements Record4<Timestamp, Integer, Long, Long> {

    private static final long serialVersionUID = -1326242897;

    /**
     * Setter for <code>folding.user_data.DATE</code>.
     */
    public void setDate(Timestamp value) {
        set(0, value);
    }

    /**
     * Getter for <code>folding.user_data.DATE</code>.
     */
    public Timestamp getDate() {
        return (Timestamp) get(0);
    }

    /**
     * Setter for <code>folding.user_data.USER_ID</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>folding.user_data.USER_ID</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>folding.user_data.POINTS_TOTAL</code>.
     */
    public void setPointsTotal(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>folding.user_data.POINTS_TOTAL</code>.
     */
    public Long getPointsTotal() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>folding.user_data.WORK_UNITS_TOTAL</code>.
     */
    public void setWorkUnitsTotal(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>folding.user_data.WORK_UNITS_TOTAL</code>.
     */
    public Long getWorkUnitsTotal() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Timestamp, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Timestamp, Integer, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Timestamp, Integer, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field1() {
        return UserData.USER_DATA.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return UserData.USER_DATA.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return UserData.USER_DATA.POINTS_TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return UserData.USER_DATA.WORK_UNITS_TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component1() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getPointsTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getWorkUnitsTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value1() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getPointsTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getWorkUnitsTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDataRecord value1(Timestamp value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDataRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDataRecord value3(Long value) {
        setPointsTotal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDataRecord value4(Long value) {
        setWorkUnitsTotal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDataRecord values(Timestamp value1, Integer value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserDataRecord
     */
    public UserDataRecord() {
        super(UserData.USER_DATA);
    }

    /**
     * Create a detached, initialised UserDataRecord
     */
    public UserDataRecord(Timestamp date, Integer userId, Long pointsTotal, Long workUnitsTotal) {
        super(UserData.USER_DATA);

        set(0, date);
        set(1, userId);
        set(2, pointsTotal);
        set(3, workUnitsTotal);
    }
}
